name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov pytest-xdist

    - name: Run unit tests with coverage
      run: |
        pytest --cov=crickformers --cov-report=xml --cov-report=term-missing --cov-fail-under=80 -v
      env:
        # Add any environment variables needed for tests here
        # Example: PYTHONPATH: ${{ github.workspace }}
        PYTHONPATH: ${{ github.workspace }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-lint-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-lint-pip-

    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy

    - name: Run code formatting checks
      run: |
        black --check --diff crickformers/ tests/
        isort --check-only --diff crickformers/ tests/

    - name: Run linting
      run: |
        flake8 crickformers/ tests/ --max-line-length=100 --ignore=E203,W503
        
    - name: Run type checking
      run: |
        mypy crickformers/ --ignore-missing-imports

# Secrets Configuration (if needed):
# Go to repository Settings -> Secrets and variables -> Actions
# Add the following secrets if your application requires them:
# 
# BETFAIR_API_KEY: Your Betfair API key for live betting integration
# MODEL_CHECKPOINT_PATH: Path to model checkpoints in cloud storage
# GNN_EMBEDDINGS_PATH: Path to GNN embeddings data
# VIDEO_SIGNAL_PATH: Path to video signal processing data
# 
# These can be accessed in workflow steps using:
# env:
#   BETFAIR_API_KEY: ${{ secrets.BETFAIR_API_KEY }}
#   MODEL_CHECKPOINT_PATH: ${{ secrets.MODEL_CHECKPOINT_PATH }} 